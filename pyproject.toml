[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool]

[tool.black]
line-length = 120

[tool.coverage]

[tool.coverage.report]
show_missing = true
skip_empty = true

[tool.coverage.run]
branch = true
omit = ['src/__init__.py', 'tests/*', '.venv/*']

[tool.githooks]
commit-msg = "cz check --commit-msg-file"
pre-commit = "task format && task lint"
pre-push = "task test && echo Pushing"

[tool.isort]
atomic = true
force_single_line = true
include_trailing_comma = true
line_length = 120
profile = "black"

[tool.mypy]
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
exclude = ".venv"
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.poetry]
authors = ["Tory Clasen <ToryClasen@Gmail.com>"]
description = ""
license = "MIT"
name = "dramatiq-mongodb"
version = "0.2.0"

[tool.poetry.dependencies]
dramatiq = "^1.12.1"
pymongo = "^4.0.1"
python = ">=3.7,<4"

[tool.poetry.dev-dependencies]
black = "^21.12b0"
commitizen = "^2.20.3"
coverage = "^6.2"
darglint = "^1.8.1"
dramatiq = { extras = ["watch"], version = "^1.12.1" }
flake8 = "<4"
flake8-aaa = "^0.12.0"
flake8-annotations = "^2.7.0"
flake8-annotations-complexity = "^0.0.6"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.3"
flake8-bugbear = "^21.11.29"
flake8-cognitive-complexity = "^0.1.0"
flake8-commas = "^2.1.0"
flake8-comments = "^0.1.2"
flake8-comprehensions = "^3.7.0"
flake8-continuation = "^1.0.5"
flake8-docstrings = "^1.6.0"
flake8-eradicate = "^1.2.0"
flake8-expression-complexity = "^0.0.9"
flake8-functions = "^0.0.6"
flake8-isort = "^4.1.1"
flake8-license = "^0.1.0"
flake8-logging-format = "^0.6.0"
flake8-loopy = "^1.1.0"
flake8-mutable = "^1.2.0"
flake8-mypy = "^17.8.0"
flake8-print = "^4.0.0"
flake8-return = "^1.1.3"
flake8-self = "^0.2.2"
flake8-unused-arguments = "^0.0.9"
isort = "^5.10.1"
mypy = "^0.930"
poetry-githooks = "^1.1.4"
pytest = "^6.2.5"
pytest-black = "^0.3.12"
pytest-cov = "^3.0.0"
pytest-flake8 = "^1.0.7"
pytest-icdiff = "^0.5"
pytest-isort = "^2.0.0"
pytest-mongodb = "^2.2.0"
pytest-mypy = "^0.8.1"
pytest-sugar = "^0.9.4"
pytest-xdist = "^2.5.0"
python-semantic-release = "^7.23.0"
safety = "^1.10.3"
taskipy = "^1.9.0"
toml-sort = "^0.19.0"

[tool.pytest]

[tool.pytest.ini_options]
addopts = "-p no:warnings -ra --flake8 --isort --black --mypy --cov=src/ --cov-report=xml"
testpaths = ["src/", "tests/"]

[tool.semantic_release]
branch = "main"
build_command = "poetry build -n"
major_on_zero = false
upload_to_PyPI = true
upload_to_release = false
version_variable = ["src/dramatiq_mongodb/__init__.py:__version__"]

[tool.taskipy]

[tool.taskipy.tasks]
clean = "task clean_cache && task clean_pyc && task clean_pyo && task clean_tmp && task clean_pycache"
clean_cache = "rm -rf .pytest_cache/ .mypy_cache/ .coverage coverage.xml"
clean_pyc = "find . -name '*.pyc' -exec rm -f {} +"
clean_pycache = "find . -name '__pycache__' -exec rm -fr {} +"
clean_pyo = "find . -name '*.pyo' -exec rm -f {} +"
clean_tmp = "find . -name '*~' -exec rm -f {} +"
format = "task format_black && task format_isort && task format_toml"
format_black = "black --quiet src/ tests/"
format_isort = "isort src/ tests/"
format_toml = "toml-sort --in-place --all *.toml"
init = "task init_hook_reset && task init_hook_install"
init_hook_install = "githooks setup"
init_hook_reset = "githooks reset -f"
lint = "task lint_flake8 && task lint_mypy"
lint_flake8 = "flake8 src/ tests/"
lint_mypy = "mypy src/ tests/"
release = "task release_semantic"
release_semantic = "semantic-release publish"
test = "task test_pytest"
test_pytest = "pytest -v src/ tests/"
